function _ZdlPv(a: ^voidtype)
{
  if a
  {
    ~free(a)
  }
}

function _ZSt17__throw_bad_allocv()
{
}

function _Znwm(s: u64) : ^voidtype
{
  p:^voidtype;
  ~allocate(@p, s);
  return p
}

function malloc(s: u64) : ^voidtype
{
  p:^voidtype;
  ~allocate(@p, s);
  return p
}

function memcpy(dst:^voidtype,src:^voidtype,n:u64):^voidtype
{
  i,n8:u64;
  dst8:^u64;
  src8:^u64;
  n8 = n / 8;
  dst8 = (dst:^u64)
  src8 = (src:^u64)
  for (i = 0 : i < n8 : i += 8)
  {
      dst8[i] = src8[i]
  }
  for (i = n8*8 : i < n : i += 1)
  {
    dst1,src1:^u8;
    dst1=(dst:^u8);
    src1=(src:^u8);
    dst1[i]=src1[i];
  }
  return dst;
}

