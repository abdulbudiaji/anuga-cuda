/*
 * Copyright (C) 2008-2013 CAPS entreprise.  All Rights Reserved.
 * 
 * The source code contained or described herein and all documents  related
 * to the source code ("Material") are owned  by  CAPS  entreprise  or  its
 * suppliers or licensors.
 * 
 * Title to the Material remains with CAPS entreprise or its suppliers  and
 * licensors.  The Material contains trade secrets and proprietary and con-
 * fidential information of CAPS entreprise or its suppliers and licensors.
 * 
 * The Material is protected by the French intellectual property code,  in-
 * tellectual property laws and international treaties.  No part of the Ma-
 * terial may be used, copied, reproduced, modified,  published,  uploaded,
 * posted, transmitted, distributed or disclosed in any  way  without  CAPS
 * entreprise's prior express written permission.
 * 
 * No license under any patent, copyright, trade secret or other  intellec-
 * tual property right is granted to or conferred upon you by disclosure or
 * delivery of the Material, either expressly, by implication,  inducement,
 * estoppel or otherwise.
 * 
 * Any license under such intellectual property rights  must  be  expressed
 * and approved by CAPS entreprise in writing.
 */
/* Initialization */
def(CUresult, cuInit,                    (unsigned int /*Flags*/),
                                                         Flags  )

/* Version Management */
def(CUresult, cuDriverGetVersion,        (int * /*driverVersion*/),
                                                  driverVersion  )

/* Device Management */
def(CUresult, cuDeviceComputeCapability, (int * /*major*/, int * /*minor*/, CUdevice /*dev*/),
                                                  major  ,         minor  ,            dev  )
def(CUresult, cuDeviceGet,               (CUdevice * /*device*/, int /*ordinal*/),
                                                       device  ,       ordinal  )
def(CUresult, cuDeviceGetAttribute,      (int * /*pi*/, CUdevice_attribute /*attrib*/, CUdevice /*dev*/),
                                                  pi  ,                      attrib  ,            dev  )
def(CUresult, cuDeviceGetCount,          (int * /*count*/),
                                                  count  )
def(CUresult, cuDeviceGetName,           (char * /*name*/, int /*len*/, CUdevice /*dev*/),
                                                   name  ,       len  ,            dev  )
def(CUresult, cuDeviceTotalMem,          (size_t * /*bytes*/, CUdevice /*dev*/),
                                                     bytes  ,            dev  ) /* FIXME: bytes is an unsigned int for CUDA < 3.2 */

/* Context Management */
def(CUresult, cuCtxCreate,               (CUcontext * /*pctx*/, unsigned int /*flags*/, CUdevice /*dev*/),
                                                        pctx  ,                flags  ,            dev  )
def(CUresult, cuCtxDestroy,              (CUcontext /*ctx*/),
                                                      ctx  )
def(CUresult, cuCtxGetApiVersion,        (CUcontext /*ctx*/, unsigned int * /*version*/),
                                                      ctx  ,                  version  )
def(CUresult, cuCtxPopCurrent,           (CUcontext * /*pctx*/),
                                                        pctx  )
def(CUresult, cuCtxPushCurrent,          (CUcontext /*ctx*/),
                                                      ctx  )
def(CUresult, cuCtxSynchronize,          ())

/* Module Management */
def(CUresult, cuModuleGetFunction,       (CUfunction * /*hfunc*/, CUmodule /*hmod*/, const char * /*name*/),
                                                         hfunc  ,            hmod  ,                name  )
def(CUresult, cuModuleGetGlobal,         (CUdeviceptr * /*dptr*/, size_t * /*bytes*/, CUmodule /*hmod*/, const char * /*name*/),
                                                          dptr,              bytes,              hmod,                  name)
def(CUresult, cuModuleLoadDataEx,        (CUmodule * /*module*/, const void * /*image*/, unsigned int /*numOptions*/, CUjit_option * /*options*/, void ** /*optionValues*/),
                                                       module  ,                image  ,                numOptions  ,                  options  ,           optionValues  )
def(CUresult, cuModuleUnload,            (CUmodule /*hmod*/),
                                                     hmod)

/* Memory Management */
def(CUresult, cuMemAlloc,                (CUdeviceptr * /*dptr*/, unsigned int /*bytesize*/),
                                                          dptr  ,                bytesize  )
def(CUresult, cuMemHostAlloc,            (void ** /*pp*/, unsigned int /*bytesize*/,  unsigned int /*flag*/),
                                                    pp  ,                bytesize  ,                 flag  )
def(CUresult, cuMemcpyDtoH,              (void * /*dstHost*/, CUdeviceptr /*srcDevice*/, unsigned int /*ByteCount*/),
                                                   dstHost  ,               srcDevice  ,                ByteCount  )
def(CUresult, cuMemcpyHtoD,              (CUdeviceptr /*dstDevice*/, const void * /*srcHost*/, unsigned int /*ByteCount*/),
                                                        dstDevice  ,                srcHost  ,                ByteCount  )
def(CUresult, cuMemcpyDtoHAsync,         (void * /*dstHost*/, CUdeviceptr /*srcDevice*/, unsigned int /*ByteCount*/, CUstream /*hStream*/),
                                                   dstHost  ,               srcDevice  ,                ByteCount  ,            hStream  )
def(CUresult, cuMemcpyHtoDAsync,         (CUdeviceptr /*dstDevice*/, const void * /*srcHost*/, unsigned int /*ByteCount*/, CUstream /*hStream*/),
                                                        dstDevice  ,                srcHost  ,                ByteCount  ,            hStream  )
def(CUresult, cuMemFree,                 (CUdeviceptr /*dptr*/),
                                                        dptr  )
def(CUresult, cuMemFreeHost,             (void * /*p*/),
                                                   p  )

/* Execution Control */
def(CUresult, cuLaunchKernel,            (CUfunction /*f*/, unsigned int /*gridDimX*/, unsigned int /*gridDimY*/, unsigned int /*gridDimZ*/, unsigned int /*blockDimX*/, unsigned int /*blockDimY*/, unsigned int /*blockDimZ*/, unsigned int /*sharedMemBytes*/, CUstream /*hStream*/, void ** /*kernelParams*/, void ** /*extra*/),
                                                       f  ,                gridDimX  ,                gridDimY  ,                gridDimZ  ,                blockDimX  ,                blockDimY  ,                blockDimZ  ,                sharedMemBytes  ,            hStream  ,           kernelParams  ,           extra  )

/* Execution Control [DEPRECATED] */
def(CUresult, cuFuncSetBlockShape,       (CUfunction /*hfunc*/, int /*x*/, int /*y*/, int /*z*/),
                                                       hfunc  ,       x  ,       y  ,       z  )
def(CUresult, cuFuncSetSharedSize,       (CUfunction /*hfunc*/, unsigned int /*bytes*/),
                                                       hfunc  ,                bytes  )
def(CUresult, cuLaunchGrid,              (CUfunction /*f*/, int /*grid_width*/, int /*grid_height*/),
                                                       f  ,       grid_witdh  ,       grid_height  )
def(CUresult, cuLaunchGridAsync,         (CUfunction /*f*/, int /*grid_width*/, int /*grid_height*/, CUstream /*hStream*/ ),
                                                       f  ,       grid_witdh  ,       grid_height  ,            hStream   )
def(CUresult, cuParamSetf,               (CUfunction /*hfunc*/, int /*offset*/, float /*value*/),
                                                       hfunc  ,       offset  ,         value  )
def(CUresult, cuParamSeti,               (CUfunction /*hfunc*/, int /*offset*/, unsigned int /*value*/),
                                                       hfunc  ,       offset  ,                value  )
def(CUresult, cuParamSetSize,            (CUfunction /*hfunc*/, unsigned int /*numbytes*/),
                                                       hfunc  ,                numbytes  )
def(CUresult, cuParamSetv,               (CUfunction /*hfunc*/, int /*offset*/, void * /*ptr*/, unsigned int /*numbytes*/),
                                                       hfunc  ,       offset  ,          ptr  ,                numbytes  )

def(CUresult, cuStreamCreate,            (CUstream * /*phStream*/, unsigned int /*Flags*/),
                                                       phStream,                  Flags  )
def(CUresult, cuStreamDestroy,           (CUstream /*hStream*/),
                                                     hStream  )
def(CUresult, cuStreamSynchronize,       (CUstream /*hStream*/),
                                                     hStream  )

def(CUresult, cuMemHostRegister,         (void * /*p*/, size_t /*bytesize*/, unsigned int /*Flags*/),
                                                   p  ,          bytesize  ,                Flags  )

def(CUresult, cuMemHostUnregister,       (void * /*p*/),
                                                   p  )
def(CUresult, cuMemHostGetFlags,         (unsigned int * /*pFlags*/, void * /*p*/),
                                                           pFlags  ,          p  )

